buildscript {
	ext {
		springBootVersion = '1.4.0.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	    classpath('se.transmode.gradle:gradle-docker:1.2')
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'
apply plugin: 'docker'

jar {
	baseName = 'easyshop-customer'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

group = 'wdlain67'

configurations {
    compile.exclude module: "spring-boot-starter-tomcat"
}

dependencies {
	compile('org.springframework.cloud:spring-cloud-starter-oauth2')
	compile('org.springframework.cloud:spring-cloud-starter-security')
	compile('org.springframework.cloud:spring-cloud-starter-eureka')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-jetty')
	runtime('javax.el:javax.el-api:2.2.4')
	runtime('org.glassfish.web:javax.el:2.2.4')
	runtime('org.postgresql:postgresql')

	
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:Brixton.SR5"
	}
}


task buildDocker(type: Docker, dependsOn: build){
  push = true
  applicationName = jar.baseName
  dockerfile = file('src/main/docker/Dockerfile')
  doFirst {
    copy {
      from jar
      into stageDir
    }
  }
}
